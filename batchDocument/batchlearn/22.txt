【1】转义符  

用在特殊符号之前,取消特殊字符的作用.
比如:
echo 非常^&批处理 
连字符&在此命令中只当作一个字符显示到屏幕中
如果不加^ 那么"批处理"将被当作命令执行；

【注意】转义字符还可以用作续行符号。

例1
@echo off 
echo 这是^
一个^
句子
Pause

为什么转义字符放在行尾可以起到续行符的作用呢？原因很简单，因为每行末尾还有一个看不见的符号，即回车符，转义字符位于行尾时就让回车符失效了，从而起到了续行的作用。
【注意】虽然^是转义字符，但是在双引号的字符串中，对双引号的转义要用双引号

例如
C:\Users\86151\Desktop
λ find /n """" a.txt

---------- A.TXT
[9]""""
[10]"a
[11]a"

而下面的两种写法将会报错

C:\Users\86151\Desktop
λ find /n "^"" a.txt
FIND: 参数格式不正确

C:\Users\86151\Desktop
λ find /n """ a.txt
FIND: 参数格式不正确

【2】通配符（?和*）

常用来代替未具体指明的文件和数据。

？代表单个字符。

* 代表全部字符。


【3】常用特殊符号

1、@命令行回显屏蔽符
2、%批处理变量引导符
3、> 重定向符
4、>>重定向符
5、<、>、<& 重定向符
6、|命令管道符
7、^转义字符
8、&组合命令
9、&&组合命令
10、||组合命令
11、\"\"字符串界定符
12、, 逗号
13、; 分号
14、() 括号
15、! 感叹号特殊符号 通配符与转义符
| (管道)传递符
当然是传递作用,将前面一条命令的执行结果传递给后面一条命令继续执行.
比如:
echo 0123456 | find "123" 
将0123456 传递给find 查找 123



|| 连接符
当前面的命令没有成功执行 则执行后面的命令 可以作判断选择用.
比如:
echo 0123456 | find "789" || echo 字符中没有789
此命令的意思是在0123456中查找字符789,如果没有找到则继续执行后面的命令,
即在屏幕中显示"字符中没有789",如果找到了,也就是如果前面是0123456789的话则停止继续执行||后面的命令,而是在屏幕中直接显示"0123456789".

&&  连接符
当前面的命令成功执行 再执行后面的命令
比如:
echo 0123456 | find "123" && echo 字符中含有123
这个命令跟||刚好相反.

& 连接符
无论前面的命令是否成功执行 都执行后面的
比如:
echo 0123456 | find "789" & echo 字符中含有123
虽然没有成功到789 但还是会执行echo 命令

> 定向符
将输出的内容重定向到指定(文本中)
比如
echo 123456789>1.txt
输出字符串到1.txt中
如果是 >nul 则是输出到空设备中 起屏蔽屏幕输出的作用
比如
@echo off
echo aaa>nul
pause>nul
这个命令不会显示任何东西


>> 定向符(追加)
将输出内容写入指定(文本中)
注意，">"将覆盖文本中原有内容
           ">>" 则是在文本的最后添加内容，
比如
echo 123>1.txt
echo 456>>1.txt
文本中有两行 分别是 123和456
如果echo 456>1.txt
那么 原有文本中的123将会替换成456

< 输入定向符
从指定的(文本)输入内容
一般用于set /p
比如 
echo 456>1.txt
set /p wind=<1.txt
这样 1.txt第一行内容就被赋值给wind了
本来set /p 这个命令是用来设置给用户输入字符的,但是=后用<1.txt,
意思是从1.txt文件中读取信息给SET /P ,而不需要用户输入.