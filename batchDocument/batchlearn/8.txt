8、call 

【1】调用文件

学过汇编或C的朋友，肯定都知道call指令表示什么意思了，在这里它的意思其实也是一样的。在批处理脚本中，call命令用来从一个批处理脚本中调用另一个批处理脚本。看例八（默认的三个脚本文件名分别为start.bat、10.bat和ipc.bat）： 

start.bat： 
…… 
CALL 10.BAT 0 
…… 

10.bat： 
…… 
ECHO %IPA%.%1 >HFIND.TMP 
…… 
CALL ipc.bat IPCFind.txt 

ipc.bat： 
for /f "tokens=1,2,3 delims= " %%i in (%1) do call HACK.bat %%i %%j %%k 

有没有看出什么不对的地方？没看出来啊？没看出来就对了，其实就没有不对的地方嘛，你怎么看的出来！从上面两个脚本，你可以得到如下信息：1、脚本调用可以灵活运用，循环运用、重复运用。2、脚本调用可以使用参数！关于第一点就不多说了，聪明的你一看就应该会，这里说一下第二点。 

在start.bat中，10.bat后面跟了参数0，在执行时的效果，其实就是把10.bat里的参数%1用0代替。在start.bat中，ipc.bat后面跟了参数ipcfind.txt（一个文件，也可以做参数），执行时的效果，就是用ipc.bat中的每一行的三个变量（这里不懂没关系，学过for命令后就懂了），对应代换ipc.bat中的%%i、%%j和%%k。这里参数调用是非常灵活的，使用时需要好好体会。在初学期间，可以先学习只调用脚本，至于连脚本的参数一起使用的情况，在后面的学习中自然就会有比较深刻的理解，这是因为当你已经可以灵活运用批处理脚本后，如何使代码写的更精简更完美更高效就自然包括到了考虑的范围，这时候你就会发现在调用脚本时直接加入参数，可以使代码效率加倍。By the way，上面的这几个脚本，都是Bat.Worm.Muma病毒的一部分，在后面的教程里，大家将有机会见到这个病毒的真面目。
那是不是说，在同一个目录下至少存在两个批处理脚本文件（只有一个你调用谁？）？呵呵，注意了，这句话错了！！只有一个照样可以调用----调用自身！看例九（默认脚本文件名a.bat）： 

net send %1 This is a call example. 
call a.bat 

这两句一结合，效果自然不怎么样，因为只有一台机器来发消息，谁怕谁啊？我给你来个礼尚往来！可如果有100台机器同时执行，而且每台机器开10和窗口同时向一个目标机器发消息的话，呵呵。这里call a.bat的作用就是调用自身，执行完前一句net send命令后再调用自身，达到了循环执行的目的。 

给出一个很有意思的脚本，有兴趣的朋友可以实验一下。例十（默认脚本文件名为a.bat）： 

call a.bat 

一定要在DOS窗口下执行，否则只会看到一个窗口一闪而过，看不到最后结果。等执行完后，当脚本被执行了1260次，别忘了想一下到底是为什么！爱情有时候跟这个脚本一样，一旦陷入死循环，最后的结果都是意想不到的。只是爱情，绝对不会等到被毫无理由的循环这么多次，也许在第三次时就出现了love is aborted的提示。

【2】调用标签。

应用示例：新建两个文本文件，一个命名为call3，修改文件的类型为bat，用Notepad++打开编辑内容为
@echo off
call :label
echo 1
echo 2

:label
echo 3
echo 4
另一个命名为call4，修改文件类型为bat，用Notepad++打开编辑内容为：
@echo off
call call3.bat
pause
双击执行call4文件，执行结果如下所示：

3
4
1
2
3
4
请按任意键继续...
过程解析：

　　看到这个结果什么感觉？让你想起了什么呢？想不起来啥？一看你若有所茫的样子，就知道你把goto与这个搞混了！请看下文call命令与goto命令的区别。

【3】调用带参数的批处理。

应用示例：新建两个文本文件，一个命名为call7，修改文件的类型为bat，用Notepad++打开编辑内容为
echo %1 %2
echo %3
另一个命名为call8，修改文件类型为bat，用Notepad++打开编辑内容为：
@echo off
call call7.bat hello world 123
dir c:\
pause

双击执行call8文件，执行结果如下所示：

hello world
123
驱动器c中的卷是系统
卷的序列号是988E-F7F8
 c:\的目录
2009/07/14 13：08〈JUNCTION>  Documents and Settings[C:Users]
2015/12/10 17：45〈DIR〉      GrandSoft
2015/09/06 16：16〈DIR〉      Inte12015/09/15 09：54〈DIR〉JGB
2009/07/14 11：20〈DIR〉      PerfLogs
2015/12/10 14：59〈DIR〉      Program Files
2015/12/25 08：37〈DIR〉      Program Files（x86）
2015/12/26 12：27〈DIR〉      QMBackup
2015/09/06 17：44〈DIR〉      QMDownload
2015/09/18 10：11〈DIR〉      Qt
2015/12/09 18：03〈DIR〉      Symbols
2015/09/07 10：26〈DIR〉      Teigha2015/09/06 17：13〈DIR〉Users
2015/12/24 14：50〈DIR〉      wamp
2015/12/26 12：29〈DIR〉      Windows
               0个文件         0字节
              15个目录 123,563,397,120 可用字节
请按任意键继续...

【4】call命令与goto命令的区别

　　call命令的应用示例2中，我们看到了call命令对跳转标签的调用，注意调用时必须在标签名前加冒号，而goto是直接跟标签名。

　　关于goto命令不懂的可以参见同系列随笔《批处理命令――goto 和 :》

　　同上例，我们再看看goto的执行效果：新建两个文本文件，一个命名为call5，修改文件的类型为bat，用Notepad++打开编辑内容为：
@echo off
goto label
echo 1
echo 2

:label
echo 3
echo 4

另一个命名为call6，修改文件类型为bat，用Notepad++打开编辑内容为：

@echo off
call call5.bat
pause

双击执行call6文件，执行结果如下所示：

3
4
请按任意键继续...

【总结】call和goto的区别，首先是书写规则上，call要在标签前面加上冒号。。其次是功能上，call并不是跳过和标签之间的内容，而是调用标签后面的内容，然后依次执行call下面的内容

【5】call 也可以用来调用一条命令，但是这个功能主要用在延迟扩展上

那么我们现在看一下call echo %%var%%这个语句：【参考%的功能】
执行call这个语句前，要先预处理一次，变成了call echo %var%
到了实际执行完call的时候，call要求执行一个echo %var%命令，那么执行echo %var%就会预处理，变成了echo 123
call的这种用法类似延迟扩展