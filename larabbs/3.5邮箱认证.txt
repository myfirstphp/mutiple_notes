【1】Auth::routes()  改为 Auth::routes(['verify' => true])
这个包含了登录，退出，注册，密码重置，邮箱认证等路由

【2】User模型，实现接口
class User extends Authenticatable implements MustVerifyEmailContract
引用trait
use Illuminate\Auth\MustVerifyEmail as MustVerifyEmailTrait;
User类内部 use MustVerifyEmailTrait

【3】app/Providers/EventServiceProvider.php
此文件中放着事件对应的监听器的配置，在$listen变量中
事件的完全限定类名是键，值是数组，数组里面放的是监听器的完全限定类名

【4】中间件、监听器的动作放在handle方法中

【5】在哪里注册中间件
创建中间件用来过滤用户的所有需求，然后注册中间件，在app/Http/Kernel.php的$middlewareGroups数组的web键中，位置要放在StartSession后面
----中间件的处理请求的逻辑放在handle函数中

【6】中间件的执行顺序
先执行 Illuminate\Foundation\Http\Kernel $middlewarePriority 再执行路由中的中间件 最后执行 Controller 中的中间件
----$middlewarePriority中定义了中间件的执行顺序，即自上而下的顺序
----不在$middlewarePriority定义的路由，在 Route::group 里定义的，先执行外层，后执行内层
在数组定义的，先执行写在数组前面的，后执行写在数组后面的
https://learnku.com/articles/14174/the-execution-order-of-multiple-middleware-in-laravel
----Route::group这个方法的作用可以简单理解为分组

【7】$request->expectsJson()
若返回的是json这个就返回true，否则返回false
什么是ajax
https://www.runoob.com/php/php-ajax-php.html

【8】larabbs.test:8025/   这是 Homestead 内置的 MailHog 软件，方便我们开发 Laravel 时对邮件发送的监控