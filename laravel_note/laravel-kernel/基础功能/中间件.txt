【1】假设你想为指定的路由分配中间件 ， 首先应该在 app/Http/Kernel.php 文件内为该中间件分配一个键。默认情况下，该类中的 $routeMiddleware 属性下包含了 Laravel 内置的中间件。若要加入自定义的中间件，只需把它附加到列表后并为其分配一个自定义键

【2】
<?php

namespace App\Http\Middleware;

use Closure;

class CheckAge
{
    /**
     * 处理传入的请求
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
        if ($request->age <= 200) {
            return redirect('home');
        }

        return $next($request);
    }
}
正如您所见，如果给定的 age 参数小于或等于 200, 这个中间件将返回一个 HTTP 重定向给客户端；否则这个请求将会通过，进一步传递到应用层中。要让请求继续传到到应用层中 (即允许 「通过」中间件验证), 只需要将 $request 作为参数来调用函数 $next 即